version: "3.9"
volumes:
  volume1:
services:
  kafka1:
    image: 'bitnami/kafka:latest'
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=r7elD8wLSgqhtuRGf0UcJA
    volumes:
      - volume1:/bitnami/kafka
  ui:
    image: provectuslabs/kafka-ui:v0.4.0
    ports:
      - "8080:8080"
    environment:
      - DYNAMIC_CONFIG_ENABLED:'true'
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka1:9092
      - KAFKA_CLUSTERS_0_NAME=kraft
      - SERVER_PORT=8080

  produce:
    image: produce
    build:
      context: ./transport
      target: produce
    environment:
      - LISTEN=0.0.0.0:8002
    command: [ "--brokers=kafka1:9092", "--topic=test" ]

  consume:
    image: consume
    build:
      context: ./transport
      target: consume
    command:
      [
        "--brokers=kafka1:9092",
        "--topic=test",
        "--group-id=akanev",
        "--receive_url=http://receive:8082/receive"
      ]

  split:
    image: split
    build:
      context: ./transport
      target: split
    environment:
      - LISTEN=0.0.0.0:8000
    command:
      [
        "--code-service-url=http://code:8081/code",
        "--chunk-byte-size=200"
      ]
